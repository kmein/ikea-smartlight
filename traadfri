#!/usr/bin/env python3
"""
IKEA Tr√•dfri command line interface.

The gateway address must be specified in TRAADFRI_HUB,
the user name in TRAADFRI_USER,
and the API key in TRAADFRI_KEY.

Usage:
    traadfri login <hub_ip> <key> <user>
    traadfri (bulb|group) <id> [-h] [--dim=<brightness>] [--colour=<colour>] [--on | --off]
    traadfri status
    traadfri colours

Options:
    --on                turn light(s) on
    --off               turn light(s) off
    --dim=<brightness>  dim light(s) (1-100)
    --colour=<colour>   change light(s) to colour
    -h, --help          show this help dialogue
"""

from functools import partial
import os
import sys

from docopt import docopt
from schema import And, Use, Schema

from traadfrilib import status, light, uri, coap


if __name__ == "__main__":
    arguments = docopt(__doc__)

    # print(arguments)

    if arguments["login"]:
        user = arguments["<user>"]
        hub_ip = arguments["<hub_ip>"]
        response = coap.post(
            "Client_identity",
            arguments["<key>"],
            "coaps://{}:5684/15011/9063".format(hub_ip),
            {9090: user},
        )
        key = response["9091"]
        print(f"TRAADFRI_KEY={key}\nTRAADFRI_USER={user}\nTRAADFRI_HUB={hub_ip}")

    if (
        "TRAADFRI_KEY" not in os.environ
        or "TRAADFRI_USER" not in os.environ
        or "TRAADFRI_HUB" not in os.environ
    ):
        print(
            "The gateway address must be specified in TRAADFRI_HUB, "
            "the user name in TRAADFRI_USER, "
            "and the API key in TRAADFRI_KEY.",
            file=sys.stderr,
        )
        sys.exit(1)

    hub_ip = os.environ["TRAADFRI_HUB"]
    api_user = os.environ["TRAADFRI_USER"]
    api_key = os.environ["TRAADFRI_KEY"]

    if arguments["status"]:
        coap_get = partial(coap.get, api_user, api_key)
        for group_id in coap_get(uri.group(hub_ip)):
            group = coap_get(uri.group(hub_ip, group_id))
            status.group(group)
            for bulb_id in group["9018"]["15002"]["9003"]:
                status.bulb(coap_get(uri.bulb(hub_ip, bulb_id)))
            print()
    elif arguments["colours"]:
        for colour in light.LightColour:
            print(colour.name)
    else:
        traadfri_id = int(arguments["<id>"])

        if arguments["bulb"]:
            traadfri_uri = uri.bulb(hub_ip, traadfri_id)
            coap_put = partial(coap.put, api_user, api_key, traadfri_uri)
        elif arguments["group"]:
            traadfri_uri = uri.group(hub_ip, traadfri_id)
            coap_put = partial(coap.put, api_user, api_key, traadfri_uri, group=True)

        if arguments["--on"]:
            coap_put(light.toggle(True))
        elif arguments["--off"]:
            coap_put(light.toggle(False))

        if arguments["--dim"]:
            brightness_schema = Schema(And(Use(int), lambda n: 1 <= n <= 100))
            brightness = brightness_schema.validate(arguments["--dim"])
            coap_put(light.dim(brightness))

        if arguments["--colour"]:
            colour_schema = Schema(
                Use(lambda name: light.LightColour[name]),
                lambda c: c in (colour.name for colour in light.LightColour),
            )
            colour = colour_schema.validate(arguments["--colour"])
            coap_put(light.colour(colour))
