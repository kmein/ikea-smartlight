#!/usr/bin/env python3
"""
IKEA Tr√•dfri command line interface.

The gateway address must be specified in TRAADFRI_HUB,
the user name in TRAADFRI_USER,
and the API key in TRAADFRI_KEY.

Usage:
    traadfri (bulb|group) <id> [-h] [--dim=<brightness>] [--warm | --normal | --cold] [--on | --off]
    traadfri status

Options:
    --warm              colour light(s) warm
    --normal            colour light(s) normal
    --cold              colour light(s) cold
    --on                turn light(s) on
    --off               turn light(s) off
    --dim=<brightness>  dim light(s) (1-100)
    -h, --help          show this help dialogue
"""

from functools import partial
import os
import sys

from docopt import docopt
from schema import And, Use, Schema

from traadfrilib import status, light, uri, coap


if __name__ == "__main__":
    arguments = docopt(__doc__)

    print(arguments)

    if (
        "TRAADFRI_KEY" not in os.environ
        or "TRAADFRI_USER" not in os.environ
        or "TRAADFRI_HUB" not in os.environ
    ):
        print(
            "The gateway address must be specified in TRAADFRI_HUB, "
            "the user name in TRAADFRI_USER, "
            "and the API key in TRAADFRI_KEY.",
            file=sys.stderr,
        )
        sys.exit(1)

    hub_ip = os.environ["TRAADFRI_HUB"]
    api_user = os.environ["TRAADFRI_USER"]
    api_key = os.environ["TRAADFRI_KEY"]

    if arguments["status"]:
        coap_get = partial(coap.get, api_user, api_key)

        bulbs = [
            coap_get(uri.bulb(hub_ip, index))
            for index, _ in enumerate(coap_get(uri.bulb(hub_ip, None)))
        ]

        for bulb in bulbs:
            status.bulb(bulb)

        groups = [
            coap_get(uri.group(hub_ip, index))
            for index, _ in enumerate(coap_get(uri.group(hub_ip, None)))
        ]

        for group in groups:
            status.group(group)
    else:
        traadfri_id = int(arguments["<id>"])

        if arguments["bulb"]:
            traadfri_uri = uri.bulb(hub_ip, traadfri_id)
        elif arguments["group"]:
            traadfri_uri = uri.group(hub_ip, traadfri_id)

        coap_put = partial(coap.put, api_user, api_key, traadfri_uri)

        if arguments["--on"]:
            coap_put(light.toggle(False))
        elif arguments["--off"]:
            coap_put(light.toggle(True))

        if arguments["--dim"]:
            brightness_schema = Schema(And(Use(int), lambda n: 1 <= n <= 100))
            brightness = brightness_schema.validate(arguments["<brightness>"])
            coap_put(light.dim(brightness))

        if arguments["--warm"]:
            coap_put(light.colour(light.LightColour.WARM))
        elif arguments["--normal"]:
            coap_put(light.colour(light.LightColour.NORMAL))
        elif arguments["--cold"]:
            coap_put(light.colour(light.LightColour.COLD))
